import{C as c}from"./CodeBlock.dcc9d3c4.js";import{N as d}from"./NextBar.395fabf9.js";import{_ as r}from"./index.30def6f8.js";import{d as b,r as t,c as m,e as o,F as p,a as l,m as a,o as v}from"./vendor.36fa6795.js";const f=b({components:{CodeBlock:c,NextBar:d},setup(){return{code1:`
    import { useScreenSize } from "@snowind/state";

    // optionaly provide mobile and tablet Tailwind breakpoints
    // defaults: 'sm' and 'lg'
    const { isMobile, isTablet, isDesktop } = useScreenSize('sm', 'xl');
    `,code2:`
    type TwBreakpoint = "sm" | "md" | "lg" | "xl" | "2xl";
    `}}}),k=l("div",{class:"mb-8 text-2xl"},"Screen size",-1),u=l("div",null,"Utilities for screen sizes and responsive design:",-1),_=a('<div class="mt-5"><code class="variable">useScreenSize</code> parameters: </div><ul class="mx-3 mt-5 space-y-2"><li><div class="inline-block font-bold">mobileBreakpoint</div>: the mobile Tailwind breakpoint: default if not provided: <code class="variable">sm</code></li><li><div class="inline-block font-bold">tabletBreakpoint</div>: the tablet Tailwind breakpoint: default if not provided: <code class="variable">lg</code></li></ul><div class="mt-5">Possible Tailwind breakpoints:</div>',3),x=a('<div class="mt-5">Available refs:</div><ul class="mx-3 mt-5 space-y-2"><li><div class="inline-block font-bold">isMobile</div>: <code class="variable">boolean</code> screen smaller than the mobile breakpoint </li><li><div class="inline-block font-bold">isTablet</div>: <code class="variable">boolean</code> screen between the mobile breakpoint and the tablet breakpoint </li><li><div class="inline-block font-bold">isDesktop</div>: <code class="variable">boolean</code> screen bigger than the tablet breakpoint </li></ul><div class="mt-12 mb-8 text-xl">Install</div><code lang="bash">npm install @snowind/state</code><br><code class="mt-3 text-neutral"># or</code><br><code class="mt-3">yarn add @snowind/state</code>',8);function h(e,i,w,S,g,B){const s=t("code-block"),n=t("next-bar");return v(),m(p,null,[k,u,o(s,{code:e.code1,lang:"typescript",class:"mt-5"},null,8,["code"]),_,o(s,{code:e.code2,lang:"typescript",class:"mt-5"},null,8,["code"]),x,o(n,{class:"mt-24",prev:{link:"/switch",text:"Switch"},next:{link:"/state/user",text:"User"}})],64)}var C=r(f,[["render",h]]);export{C as default};
